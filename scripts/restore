#!/bin/bash

# Keep this path for calling _common.sh inside the execution's context of backup and restore scripts
source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers

#=================================================
# RESTORE THE APP MAIN DIR
#=================================================
ynh_script_progression "Restoring the app main directory..."

ynh_restore "$install_dir"

#=================================================
# RESTORE THE DATA DIRECTORY
#=================================================
ynh_script_progression "Restoring the data directory..."

ynh_restore "$data_dir"

#=================================================
# RESTORE THE NGINX CONFIGURATION
#=================================================
ynh_script_progression "Restoring the NGINX web server configuration..."

ynh_restore "/etc/nginx/conf.d/$domain.d/$app.conf"

#add wildcard subdomain
ynh_restore "/usr/share/yunohost/hooks/conf_regen/98-nginx_$app"
yunohost tools regen-conf nginx

ynh_restore "/etc/systemd/system/$app.service"
systemctl enable $app.service --quiet

mkdir -p "/var/log/$app/"
touch "/var/log/$app/$app.log"
chown -R $app:$app /var/log/$app/
ynh_restore "/etc/logrotate.d/$app"

yunohost service add $app --description="s3 storage" --log="/var/log/$app/$app.log" --needs_exposed_ports $port

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service=$app --action="start" --log_path="systemd"

#=================================================
# RECREATE CONFIGURATION
#=================================================

i=0
# sometimes server need some time to start
while [ -z "$($garage node id -q 2>/dev/null | cut -d '@' -f1)" ]; do
    i=$(( i + 1 ))
    [ $i -le 30 ] || { $garage node id || true; ynh_die "unable to get node id"; }
    sleep 1
done

# restoring garage can lead to change node id
secret_node_id=$($garage node id -q 2>/dev/null | cut -d '@' -f1)
ynh_app_setting_set --key=secret_node_id --value=$secret_node_id

# define node
$garage layout assign $secret_node_id -z $domain -c ${weight}GB -t $domain
# if there is enough node, apply layout
garage_layout_apply

if [ -n "$bootstrap_peers" ]

then
	garage_connect "$bootstrap_peers"
fi

#=================================================
# RELOAD NGINX AND PHP-FPM
#=================================================
ynh_script_progression "Reloading NGINX web server..."

ynh_systemctl --service=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Restoration completed for $app"
